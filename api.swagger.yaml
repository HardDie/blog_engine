swagger: "2.0"
info:
  title: Blog Server.
  description: Entry point for the application.
  version: 1.0.0
  contact:
    name: HardDie
    url: https://github.com/HardDie
    email: oleg1995sysoev@yandex.ru
tags:
  - name: Auth
  - name: Invite
  - name: Post
  - name: User
basePath: /
schemes:
  - https
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /api/v1/auth/login:
    post:
      summary: Login form
      operationId: Auth_Login
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayLoginRequest'
      tags:
        - Auth
  /api/v1/auth/logout:
    post:
      summary: Logout
      operationId: Auth_Logout
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties: {}
      tags:
        - Auth
  /api/v1/auth/register:
    post:
      summary: Registration form
      operationId: Auth_Register
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayRegisterRequest'
      tags:
        - Auth
  /api/v1/auth/user:
    get:
      summary: Getting information about the current user
      operationId: Auth_User
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayUserResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Auth
  /api/v1/invites/generate:
    post:
      summary: Generate a new invitation code
      operationId: Invite_Generate
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGenerateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Invite
  /api/v1/invites/revoke:
    delete:
      summary: Revoke the generated invitation code
      operationId: Invite_Revoke
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      tags:
        - Invite
  /api/v1/posts:
    get:
      summary: Get a list of posts for the current user
      operationId: Post_List
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayListResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          required: false
          type: string
      tags:
        - Post
    post:
      summary: Post creation form
      operationId: Post_Create
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayCreateResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayCreateRequest'
      tags:
        - Post
  /api/v1/posts/feed:
    get:
      summary: Get feed
      operationId: Post_Feed
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayFeedResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: query
          in: query
          required: false
          type: string
      tags:
        - Post
  /api/v1/posts/{id}:
    get:
      summary: Get public post
      operationId: Post_PublicGet
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayPublicGetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: int64
      tags:
        - Post
    put:
      summary: Edit post form
      operationId: Post_Edit
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayEditResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/PostEditBody'
      tags:
        - Post
  /api/v1/user/password:
    put:
      summary: Updating the password for a user
      operationId: User_Password
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayPasswordRequest'
      tags:
        - User
  /api/v1/user/profile:
    put:
      summary: Updating user information
      operationId: User_Profile
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/gatewayProfileRequest'
      tags:
        - User
  /api/v1/user/{id}:
    get:
      summary: Getting information about a user by ID
      operationId: User_Get
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/gatewayGetResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: id
          in: path
          required: true
          type: string
          format: int64
      tags:
        - User
definitions:
  PostEditBody:
    type: object
    properties:
      title:
        type: string
      short:
        type: string
      body:
        type: string
      tags:
        type: array
        items:
          type: string
      isPublished:
        type: boolean
  gatewayCreateRequest:
    type: object
    properties:
      title:
        type: string
      short:
        type: string
      body:
        type: string
      tags:
        type: array
        items:
          type: string
      isPublished:
        type: boolean
  gatewayCreateResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/gatewayPostObject'
  gatewayEditResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/gatewayPostObject'
  gatewayFeedResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayPostObject'
  gatewayGenerateResponse:
    type: object
    properties:
      data:
        type: string
  gatewayGetResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/gatewayPrivateUserObject'
  gatewayListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          $ref: '#/definitions/gatewayPostObject'
  gatewayLoginRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
  gatewayPasswordRequest:
    type: object
    properties:
      oldPassword:
        type: string
      newPassword:
        type: string
  gatewayPostObject:
    type: object
    properties:
      id:
        type: string
        format: int64
      userId:
        type: string
        format: int64
      user:
        $ref: '#/definitions/gatewayPublicUserObject'
      title:
        type: string
      short:
        type: string
      body:
        type: string
      tags:
        type: array
        items:
          type: string
      isPublished:
        type: boolean
      createdAt:
        type: string
        format: date-time
  gatewayPrivateUserObject:
    type: object
    properties:
      id:
        type: string
        format: int64
      username:
        type: string
      displayedName:
        type: string
      email:
        type: string
      invitedByUserId:
        type: string
        format: int64
      createdAt:
        type: string
        format: date-time
  gatewayProfileRequest:
    type: object
    properties:
      displayedName:
        type: string
      email:
        type: string
  gatewayPublicGetResponse:
    type: object
    properties:
      data:
        $ref: '#/definitions/gatewayPostObject'
  gatewayPublicUserObject:
    type: object
    properties:
      id:
        type: string
        format: int64
      displayedName:
        type: string
      invitedByUserId:
        type: string
        format: int64
      createdAt:
        type: string
        format: date-time
  gatewayRegisterRequest:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
      displayedName:
        type: string
      invite:
        type: string
  gatewayUserResponse:
    type: object
    properties:
      id:
        type: string
        format: int64
      username:
        type: string
      displayedName:
        type: string
      email:
        type: string
      invitedByUserId:
        type: string
        format: int64
      createdAt:
        type: string
        format: date-time
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: '#/definitions/protobufAny'
securityDefinitions:
  bearer:
    type: apiKey
    description: 'Authentication token, prefixed by Bearer: Bearer <token>'
    name: Authorization
    in: header
security:
  - bearer: []
