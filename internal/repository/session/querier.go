// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package session

import (
	"context"
)

type Querier interface {
	//CreateOrUpdate
	//
	//  INSERT INTO sessions (user_id, session_hash)
	//  VALUES (?, ?)
	//  ON CONFLICT (user_id) DO UPDATE
	//  SET session_hash = excluded.session_hash, updated_at = datetime('now'), deleted_at = NULL
	//  RETURNING id, user_id, session_hash, created_at, updated_at, deleted_at
	CreateOrUpdate(ctx context.Context, arg CreateOrUpdateParams) (*Session, error)
	//DeleteByID
	//
	//  UPDATE sessions
	//  SET deleted_at = datetime('now')
	//  WHERE id = ?
	//    AND deleted_at IS NULL
	DeleteByID(ctx context.Context, id int64) error
	//GetByUserID
	//
	//  SELECT id, user_id, session_hash, created_at, updated_at, deleted_at
	//  FROM sessions
	//  WHERE session_hash = ?
	//    AND deleted_at IS NULL
	GetByUserID(ctx context.Context, sessionHash string) (*Session, error)
}

var _ Querier = (*Queries)(nil)
